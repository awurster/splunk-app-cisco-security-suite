############################
#       ISE Macros         #
############################

# for cleaning fields (like "Windows7-Workstation") into nicer looking format
# specify the field containing the ugly name to produce a nice one
# usage: `clean_names(EndPointMatchedProfile)`
[clean_names(1)]
args = field
definition = rex mode=sed field=$field$ "s/[\-\\\_]/ /g"
iseval = 0

# for cleaning fields (like "001122334455") into nicer looking, uniform format
# specify the field containing the ugly name to produce a nice one
# usage: `clean_mac_addr(Calling_Station_ID)`
[clean_mac_addr(1)]
args = mac_field
definition = rex field=$mac_field$ "(?<_a>[0-9A-Fa-f]{2})[\:\-\.]?(?<_b>[0-9A-Fa-f]{2})[\:\-\.]?(?<_c>[0-9A-Fa-f]{2})[\:\-\.]?(?<_d>[0-9A-Fa-f]{2})[\:\-\.]?(?<_e>[0-9A-Fa-f]{2})[\:\-\.]?(?<_f>[0-9A-Fa-f]{2})" | eval $mac_field$ = _a.":"._b.":"._c.":"._d.":"._e.":"._f | eval $mac_field$ = upper($mac_field$)
iseval = 0



############################
#       WSA Macros         #
############################

[fill-user-id]
definition = eval user_id=if(cs_username="-","[".c_ip."]",user_id)
iseval = 0

[resize-bytes(2)]
# format byte count according to the normal, human readable sizes.  best for reporting and dashboards.
# output into a new field.
# usage:  `resize-bytes("h_bytes",bytes)`
args = var_name,bytes
definition = eval $var_name$ = $bytes$ | fieldformat $var_name$=if($var_name$>=1024,if($var_name$>=1048576,if($var_name$>=1073741824,if($var_name$>=1099511627776,(tostring(round($var_name$/1024/1024/1024/1024,2))+" TB"),(tostring(round($var_name$/1024/1024/1024,2))+" GB")),(tostring(round($var_name$/1024/1024,2))+" MB")),(tostring(round($var_name$/1024,2))+" KB")),(tostring($var_name$)+" b"))

[resize-bytes-num(2)]
# format byte count according to the normal, human readable sizes. output size metric as a separate var.
# output into a new field.
# usage:  `resize-bytes("h_bytes",bytes)`
args = var_name,bytes
definition = eval units = case($bytes$>=1024 AND $bytes$<1048576, "KB", $bytes$>=1048576 AND $bytes$<1073741824, "MB", $bytes$>=1073741824 AND $bytes$<1099511627776, "GB", $bytes$>=1099511627776, "TB") | eval $var_name$ = case($bytes$>=1024 AND $bytes$<1048576, round($bytes$/1024,2), $bytes$>=1048576 AND $bytes$<1073741824, round($bytes$/1024/1024,2), $bytes$>=1073741824 AND $bytes$<1099511627776, round($bytes$/1024/1024/1024,2), $bytes$>=1099511627776, round($bytes$/1024/1024/1024/1024,2))

[shorten(4)]
# shortens target to length and appends with indicator
# the act of appending the indicator is included in the overall length calculation (resulting in related validation, below)
# usage:  eval url="http://www.splunk.com" | `shorten(Website,url,20,"...")`
args = var_name,text,length,indicator
definition = eval $var_name$=if(len($text$)>$length$,substr($text$,1,$length$-len("$indicator$"))+"$indicator$",$text$)
validation = validate(isint(length),"length is expected to be an int, not "+typeof(length),isstr(text),"text is expected to be a string, not "+typeof(text),length>len(indicator),"length must be greater than length of indicator")

[fill-user-id]
# substitue IP address for user ID if unauthenticated session.  no args needed.
# usage:  `fill-user-id`
definition = eval cs_username=if(cs_username="-",c_ip,cs_username)




#############################
#       Legacy Macros       #
#############################

[formatbytestom(1)]
args = bytes
definition = $bytes$/1048576
[fill-user-id]
definition = eval user_id=if(cs_username="-","[".c_ip."]",user_id)
iseval = 0
